"use client";

import "@ant-design/v5-patch-for-react-19";
import "./globals.css";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import React from "react";
import { App, unstableSetRender } from "antd";
import AntdProvider from "./components/AntdProvider";
import { ReactNode } from "react";
import { Root, createRoot } from "react-dom/client";
import { AntdRegistry } from "@ant-design/nextjs-registry";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// interface HTMLElement {
//   _reactRoot?: Root;
// }

unstableSetRender((node, container) => {
  const htmlContainer = container as HTMLElement;
  htmlContainer._reactRoot ||= createRoot(container);
  const root = htmlContainer._reactRoot;
  root.render(node);
  return async () => {
    await new Promise<void>((resolve) => setTimeout(resolve, 0));
    root.unmount();
  };
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const RootLayout: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  return (
    <html lang="en">
      <body>
        <AntdProvider>
          <App>{children}</App>
        </AntdProvider>
      </body>
    </html>
  );
};

export default RootLayout;

// const RootLayout = ({ children }: React.PropsWithChildren) => (
//   <html lang="en">
//     <body>
//       <AntdRegistry>{children}</AntdRegistry>
//     </body>
//   </html>
// );

// export default RootLayout;
